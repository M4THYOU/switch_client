[{"/Users/matthewwolfe/WebstormProjects/switch_client/src/App.tsx":"1","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/SwitchControl.tsx":"2","/Users/matthewwolfe/WebstormProjects/switch_client/src/index.tsx":"3","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/switch.ts":"4","/Users/matthewwolfe/WebstormProjects/switch_client/src/utils/enums.tsx":"5","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignIn.tsx":"6","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignUp.tsx":"7","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/Copyright.tsx":"8","/Users/matthewwolfe/WebstormProjects/switch_client/src/reportWebVitals.ts":"9","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api.ts":"10","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/auth.ts":"11","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/PleaseConfirm.tsx":"12","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/LoadingSpinner.tsx":"13"},{"size":739,"mtime":1612619003357,"results":"14","hashOfConfig":"15"},{"size":1570,"mtime":1612052808274,"results":"16","hashOfConfig":"15"},{"size":507,"mtime":1612359359929,"results":"17","hashOfConfig":"15"},{"size":264,"mtime":1612570881409,"results":"18","hashOfConfig":"15"},{"size":263,"mtime":1612052322330,"results":"19","hashOfConfig":"15"},{"size":4367,"mtime":1612623938633,"results":"20","hashOfConfig":"15"},{"size":6247,"mtime":1612623283390,"results":"21","hashOfConfig":"15"},{"size":482,"mtime":1612358359356,"results":"22","hashOfConfig":"15"},{"size":425,"mtime":1612016866254,"results":"23","hashOfConfig":"15"},{"size":1213,"mtime":1612571247915,"results":"24","hashOfConfig":"15"},{"size":1773,"mtime":1612629208665,"results":"25","hashOfConfig":"15"},{"size":952,"mtime":1612618897172,"results":"26","hashOfConfig":"15"},{"size":971,"mtime":1612621023560,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d1wjia",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matthewwolfe/WebstormProjects/switch_client/src/App.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/SwitchControl.tsx",["55"],"import React, {FC, useEffect, useMemo, useRef, useState} from \"react\";\nimport {getState, setState} from \"../services/switch\";\nimport {boolToThingState, ThingState, thingStateToBool} from \"../utils/enums\";\n\ninterface ISwitchState {\n    on: ThingState\n}\n\nexport const SwitchControl: FC<{ thingId: string }> = ({ thingId }) => {\n    let mounted = useRef(false);\n    const [switchState, setSwitchState] = useState<ISwitchState>({on: ThingState.PENDING});\n\n    useEffect(() => {\n        getState(thingId).then(state => {\n            const on: boolean = state.state.on;\n            setSwitchState({ on: boolToThingState(on) });\n            mounted.current = true;\n        });\n    }, []);\n\n    function handleSet(on: ThingState) {\n        const payload = {\n            on: +thingStateToBool(on)\n        };\n        setState(thingId, payload).then(state => {\n            const on: boolean = state.on;\n            setSwitchState({on: boolToThingState(on)});\n        });\n    }\n\n    function printSwitchState(s: ISwitchState): string {\n        switch (s.on) {\n            case ThingState.OFF:\n                return \"OFF\";\n            case ThingState.ON:\n                return \"ON\";\n            default:\n                return \"___\";\n        }\n    }\n    const printState = useMemo(() => printSwitchState(switchState), [ switchState ]);\n\n    return (\n        <>\n            <h1>Your switch is { printState }</h1>\n            <button onClick={() => handleSet(ThingState.ON)}>ON</button>\n            <button onClick={() => handleSet(ThingState.OFF)}>OFF</button>\n        </>\n    );\n}\n","/Users/matthewwolfe/WebstormProjects/switch_client/src/index.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/switch.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/utils/enums.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignIn.tsx",["56","57","58"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignUp.tsx",["59","60"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/Copyright.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/reportWebVitals.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/auth.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/PleaseConfirm.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/LoadingSpinner.tsx",[],{"ruleId":"61","severity":1,"message":"62","line":19,"column":8,"nodeType":"63","endLine":19,"endColumn":10,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":16,"column":9,"nodeType":"67","messageId":"68","endLine":16,"endColumn":27},{"ruleId":"65","severity":1,"message":"69","line":17,"column":16,"nodeType":"67","messageId":"68","endLine":17,"endColumn":24},{"ruleId":"65","severity":1,"message":"70","line":26,"column":9,"nodeType":"67","messageId":"68","endLine":26,"endColumn":16},{"ruleId":"65","severity":1,"message":"71","line":19,"column":9,"nodeType":"67","messageId":"68","endLine":19,"endColumn":17},{"ruleId":"65","severity":1,"message":"72","line":27,"column":12,"nodeType":"67","messageId":"68","endLine":27,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'thingId'. Either include it or remove the dependency array.","ArrayExpression",["73"],"@typescript-eslint/no-unused-vars","'PATH_CONFIRM_EMAIL' is defined but never used.","Identifier","unusedVar","'register' is defined but never used.","'history' is assigned a value but never used.","'Redirect' is defined but never used.","'optIn' is assigned a value but never used.",{"desc":"74","fix":"75"},"Update the dependencies array to be: [thingId]",{"range":"76","text":"77"},[677,679],"[thingId]"]