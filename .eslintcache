[{"/Users/matthewwolfe/WebstormProjects/switch_client/src/App.tsx":"1","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignUp.tsx":"2","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignIn.tsx":"3","/Users/matthewwolfe/WebstormProjects/switch_client/src/hooks/use-auth.tsx":"4","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/SwitchControl.tsx":"5","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/PleaseConfirm.tsx":"6","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Title.tsx":"7","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/Dashboard.tsx":"8","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/MainSideList.tsx":"9","/Users/matthewwolfe/WebstormProjects/switch_client/src/utils/enums.tsx":"10","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardMain.tsx":"11","/Users/matthewwolfe/WebstormProjects/switch_client/src/styles/main.ts":"12","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardNewFamily.tsx":"13","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardFamily.tsx":"14","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/api.ts":"15","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/auth.ts":"16","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Orders.tsx":"17"},{"size":1086,"mtime":1612745236482,"results":"18","hashOfConfig":"19"},{"size":6253,"mtime":1612706403495,"results":"20","hashOfConfig":"19"},{"size":4376,"mtime":1613153794395,"results":"21","hashOfConfig":"19"},{"size":762,"mtime":1612745092972,"results":"22","hashOfConfig":"19"},{"size":1576,"mtime":1612705265030,"results":"23","hashOfConfig":"19"},{"size":955,"mtime":1612706391475,"results":"24","hashOfConfig":"19"},{"size":369,"mtime":1612825179280,"results":"25","hashOfConfig":"19"},{"size":7963,"mtime":1613247124872,"results":"26","hashOfConfig":"19"},{"size":3911,"mtime":1613247005627,"results":"27","hashOfConfig":"19"},{"size":367,"mtime":1613002482867,"results":"28","hashOfConfig":"19"},{"size":1224,"mtime":1613003859430,"results":"29","hashOfConfig":"19"},{"size":2721,"mtime":1613003497239,"results":"30","hashOfConfig":"19"},{"size":130,"mtime":1613153437044,"results":"31","hashOfConfig":"19"},{"size":124,"mtime":1613153348144,"results":"32","hashOfConfig":"19"},{"size":1814,"mtime":1613231997871,"results":"33","hashOfConfig":"19"},{"size":1883,"mtime":1613154685424,"results":"34","hashOfConfig":"19"},{"size":2721,"mtime":1612742095916,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d1wjia",{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/matthewwolfe/WebstormProjects/switch_client/src/App.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignUp.tsx",["72","73"],"import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {Copyright} from \"../components/ui/Copyright\";\nimport {register, validateEmail} from \"../services/auth\";\nimport {mainStyles} from \"../styles/main\";\nimport {PATH_CONFIRM_EMAIL, PATH_LOGIN} from \"../services/routePaths\";\nimport {LoadingSpinner} from \"../components/ui/LoadingSpinner\";\nimport {Redirect, useHistory} from \"react-router\";\n\nexport default function SignUp() {\n    const classes = mainStyles();\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [optIn, setOptIn] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    let history = useHistory();\n\n    function handleSubmit(e: any) {\n        e.preventDefault();\n        if (!firstName) {\n            alert('Please enter your first name.');\n            return;\n        } else if (!lastName) {\n            alert('Please enter your last name.');\n            return;\n        } else if (!email || !validateEmail(email)) {\n            alert('Please enter a valid email.');\n            return;\n        } else if (!password) {\n            alert('Please enter your password.');\n            return;\n        }\n        setIsLoading(true);\n        register(firstName, lastName, email, password).then(res => {\n            setIsLoading(false);\n            if (!!res) {\n                history.push(PATH_CONFIRM_EMAIL);\n            }\n        });\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <LoadingSpinner isShowing={isLoading}/>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                onChange={(e) => setFirstName(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                onChange={(e) => setLastName(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControlLabel\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" onChange={(e) => setOptIn(e.target.checked)} />}\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href={PATH_LOGIN} variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignIn.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/hooks/use-auth.tsx",["74"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/SwitchControl.tsx",["75"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/PleaseConfirm.tsx",[],["76","77"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Title.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/Dashboard.tsx",["78","79"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/MainSideList.tsx",["80","81"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/utils/enums.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardMain.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/styles/main.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardNewFamily.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardFamily.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/api.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/auth.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Orders.tsx",[],{"ruleId":"82","severity":1,"message":"83","line":19,"column":9,"nodeType":"84","messageId":"85","endLine":19,"endColumn":17},{"ruleId":"82","severity":1,"message":"86","line":27,"column":12,"nodeType":"84","messageId":"85","endLine":27,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":24,"column":8,"nodeType":"89","endLine":24,"endColumn":10,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":19,"column":8,"nodeType":"89","endLine":19,"endColumn":10,"suggestions":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"87","severity":1,"message":"97","line":169,"column":49,"nodeType":"89","endLine":169,"endColumn":80,"suggestions":"98"},{"ruleId":"87","severity":1,"message":"99","line":170,"column":56,"nodeType":"89","endLine":170,"endColumn":87,"suggestions":"100"},{"ruleId":"82","severity":1,"message":"101","line":13,"column":9,"nodeType":"84","messageId":"85","endLine":13,"endColumn":21},{"ruleId":"87","severity":1,"message":"102","line":51,"column":58,"nodeType":"89","endLine":51,"endColumn":68,"suggestions":"103"},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'optIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'thingId'. Either include it or remove the dependency array.",["105"],"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"React Hook useMemo has a missing dependency: 'renderPage'. Either include it or remove the dependency array.",["108"],"React Hook useMemo has a missing dependency: 'getPageTitle'. Either include it or remove the dependency array.",["109"],"'createFamily' is defined but never used.","React Hook useMemo has a missing dependency: 'renderFamilies'. Either include it or remove the dependency array.",["110"],{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [history]",{"range":"121","text":"122"},"Update the dependencies array to be: [thingId]",{"range":"123","text":"124"},"Update the dependencies array to be: [renderPage]",{"range":"125","text":"126"},"Update the dependencies array to be: [getPageTitle]",{"range":"127","text":"128"},"Update the dependencies array to be: [renderFamilies]",{"range":"129","text":"130"},[755,757],"[history]",[683,685],"[thingId]",[5513,5544],"[renderPage]",[5602,5633],"[getPageTitle]",[1859,1869],"[renderFamilies]"]