[{"/Users/matthewwolfe/WebstormProjects/switch_client/src/App.tsx":"1","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignUp.tsx":"2","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignIn.tsx":"3","/Users/matthewwolfe/WebstormProjects/switch_client/src/hooks/use-auth.tsx":"4","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/SwitchControl.tsx":"5","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/PleaseConfirm.tsx":"6","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Title.tsx":"7","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/Dashboard.tsx":"8","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/MainSideList.tsx":"9","/Users/matthewwolfe/WebstormProjects/switch_client/src/utils/enums.tsx":"10","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardMain.tsx":"11","/Users/matthewwolfe/WebstormProjects/switch_client/src/styles/main.ts":"12","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardNewFamily.tsx":"13","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardFamily.tsx":"14","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/api.ts":"15","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/auth.ts":"16","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Orders.tsx":"17","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/apiRoutes.ts":"18","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/family.ts":"19","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/ClusterBox.tsx":"20","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardCluster.tsx":"21"},{"size":1086,"mtime":1612745236482,"results":"22","hashOfConfig":"23"},{"size":6257,"mtime":1613153794387,"results":"24","hashOfConfig":"23"},{"size":4376,"mtime":1613153794395,"results":"25","hashOfConfig":"23"},{"size":762,"mtime":1612745092972,"results":"26","hashOfConfig":"23"},{"size":1576,"mtime":1612705265030,"results":"27","hashOfConfig":"23"},{"size":955,"mtime":1612706391475,"results":"28","hashOfConfig":"23"},{"size":369,"mtime":1612825179280,"results":"29","hashOfConfig":"23"},{"size":8667,"mtime":1613322494219,"results":"30","hashOfConfig":"23"},{"size":3911,"mtime":1613247005627,"results":"31","hashOfConfig":"23"},{"size":392,"mtime":1613320729247,"results":"32","hashOfConfig":"23"},{"size":1224,"mtime":1613003859430,"results":"33","hashOfConfig":"23"},{"size":2721,"mtime":1613003497239,"results":"34","hashOfConfig":"23"},{"size":130,"mtime":1613153437044,"results":"35","hashOfConfig":"23"},{"size":2025,"mtime":1613322294342,"results":"36","hashOfConfig":"23"},{"size":1814,"mtime":1613231997871,"results":"37","hashOfConfig":"23"},{"size":1883,"mtime":1613154685424,"results":"38","hashOfConfig":"23"},{"size":2721,"mtime":1612742095916,"results":"39","hashOfConfig":"23"},{"size":462,"mtime":1613318662170,"results":"40","hashOfConfig":"23"},{"size":399,"mtime":1613319342589,"results":"41","hashOfConfig":"23"},{"size":779,"mtime":1613320330279,"results":"42","hashOfConfig":"23"},{"size":2142,"mtime":1613322307190,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d1wjia",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/matthewwolfe/WebstormProjects/switch_client/src/App.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignUp.tsx",["88","89"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignIn.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/hooks/use-auth.tsx",["90"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/SwitchControl.tsx",["91"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/PleaseConfirm.tsx",[],["92","93"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Title.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/Dashboard.tsx",["94","95","96"],"import React, {FC, useEffect, useMemo} from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport {MainSideList} from '../components/ui/dashboard/MainSideList';\nimport {Copyright} from \"../components/ui/Copyright\";\nimport {useProvideAuth} from \"../hooks/use-auth\";\nimport {DashboardPage} from \"../utils/enums\";\nimport {DashboardMain} from \"./dashboard/DashboardMain\";\nimport {DashboardNewFamily} from \"./dashboard/DashboardNewFamily\";\nimport {DashboardFamily} from \"./dashboard/DashboardFamily\";\nimport {createFamily, getFamilies} from \"../services/api/family\";\nimport {ICluster, IFamily, IThing} from \"../utils/interfaces\";\nimport {DashboardCluster} from \"./dashboard/DashboardCluster\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nexport const Dashboard: FC = () => {\n    useProvideAuth();\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const [dashboardPage, setDashboardPage] = React.useState(DashboardPage.MAIN);\n    const [families, setFamilies] = React.useState<Array<IFamily>>([]);\n    const [selectedFamily, setSelectedFamily] = React.useState<IFamily | null>(null);\n    const [selectedCluster, setSelectedCluster] = React.useState<ICluster | null>(null);\n\n    useEffect(() => {\n        getFamilies().then(res => {\n            const families: Array<IFamily> = res.families;\n            setFamilies(families);\n        }).catch(e => {\n            console.error(e);\n        });\n    }, []);\n\n    const handleNewFamily = () => {\n        createFamily().then(res => {\n            const family: IFamily = res.family;\n            const fams = families.slice();\n            fams.push(family);\n            setFamilies(fams);\n        }).catch(e => {\n            console.error(e);\n        });\n    };\n    const handleFamilyClick = (family: IFamily) => {\n        setSelectedFamily(family);\n        setDashboardPage(DashboardPage.FAMILY);\n    };\n    const handleClusterClick = (cluster: ICluster) => {\n        setSelectedCluster(cluster);\n        setDashboardPage(DashboardPage.CLUSTER);\n    };\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    function getPageTitle() {\n        switch (dashboardPage) {\n            case DashboardPage.MAIN:\n                return 'Dashboard';\n            case DashboardPage.NEW_FAMILY:\n                return 'Add a new Family';\n            case DashboardPage.FAMILY:\n                return !!selectedFamily ? selectedFamily.name : '';\n            case DashboardPage.CLUSTER:\n                const familyS = !!selectedFamily ? (selectedFamily.name + ' > ') : '';\n                const clusterS = !!selectedCluster ? selectedCluster.name : '';\n                return familyS + clusterS;\n        }\n    }\n    function renderPage() {\n        switch (dashboardPage) {\n            case DashboardPage.MAIN:\n                return <DashboardMain />;\n            case DashboardPage.NEW_FAMILY:\n                return <DashboardNewFamily />;\n            case DashboardPage.FAMILY:\n                return !!selectedFamily ? <DashboardFamily family={selectedFamily} handleClusterClick={handleClusterClick} /> : <></>;\n            case DashboardPage.CLUSTER:\n                return !!selectedCluster ? <DashboardCluster cluster={selectedCluster} /> : <></>;\n        }\n    }\n    const curPage = useMemo(() => renderPage(), [dashboardPage, selectedFamily]);\n    const curPageTitle = useMemo(() => getPageTitle(), [dashboardPage, selectedFamily]);\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                        { curPageTitle }\n                    </Typography>\n                    <IconButton color=\"inherit\">\n                        <Badge badgeContent={4} color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbarIcon}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n                <Divider />\n\n                <MainSideList handleLinkClick={setDashboardPage}\n                              handleFamilyClick={handleFamilyClick}\n                              handleNewFamily={handleNewFamily}\n                              families={families}\n                />\n\n                {/*<Divider />*/}\n                {/*<SecondarySideList />*/}\n\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    { curPage }\n                    <Box pt={4}>\n                        <Copyright />\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n}\n","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/MainSideList.tsx",["97","98"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/utils/enums.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardMain.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/styles/main.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardNewFamily.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardFamily.tsx",["99","100"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/api.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/auth.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Orders.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/apiRoutes.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/family.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/ClusterBox.tsx",["101","102"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardCluster.tsx",["103","104","105","106","107","108","109"],{"ruleId":"110","severity":1,"message":"111","line":19,"column":9,"nodeType":"112","messageId":"113","endLine":19,"endColumn":17},{"ruleId":"110","severity":1,"message":"114","line":27,"column":12,"nodeType":"112","messageId":"113","endLine":27,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":24,"column":8,"nodeType":"117","endLine":24,"endColumn":10,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":19,"column":8,"nodeType":"117","endLine":19,"endColumn":10,"suggestions":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"110","severity":1,"message":"125","line":25,"column":28,"nodeType":"112","messageId":"113","endLine":25,"endColumn":34},{"ruleId":"115","severity":1,"message":"126","line":179,"column":49,"nodeType":"117","endLine":179,"endColumn":80,"suggestions":"127"},{"ruleId":"115","severity":1,"message":"128","line":180,"column":56,"nodeType":"117","endLine":180,"endColumn":87,"suggestions":"129"},{"ruleId":"110","severity":1,"message":"130","line":13,"column":9,"nodeType":"112","messageId":"113","endLine":13,"endColumn":21},{"ruleId":"115","severity":1,"message":"131","line":51,"column":58,"nodeType":"117","endLine":51,"endColumn":68,"suggestions":"132"},{"ruleId":"115","severity":1,"message":"133","line":34,"column":8,"nodeType":"117","endLine":34,"endColumn":10,"suggestions":"134"},{"ruleId":"115","severity":1,"message":"135","line":47,"column":58,"nodeType":"117","endLine":47,"endColumn":68,"suggestions":"136"},{"ruleId":"110","severity":1,"message":"137","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":18},{"ruleId":"110","severity":1,"message":"138","line":18,"column":11,"nodeType":"112","messageId":"113","endLine":18,"endColumn":18},{"ruleId":"110","severity":1,"message":"139","line":2,"column":19,"nodeType":"112","messageId":"113","endLine":2,"endColumn":26},{"ruleId":"110","severity":1,"message":"140","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":13},{"ruleId":"110","severity":1,"message":"141","line":6,"column":9,"nodeType":"112","messageId":"113","endLine":6,"endColumn":26},{"ruleId":"110","severity":1,"message":"142","line":7,"column":9,"nodeType":"112","messageId":"113","endLine":7,"endColumn":19},{"ruleId":"110","severity":1,"message":"143","line":29,"column":11,"nodeType":"112","messageId":"113","endLine":29,"endColumn":27},{"ruleId":"110","severity":1,"message":"144","line":30,"column":20,"nodeType":"112","messageId":"113","endLine":30,"endColumn":29},{"ruleId":"115","severity":1,"message":"135","line":54,"column":56,"nodeType":"117","endLine":54,"endColumn":64,"suggestions":"145"},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'optIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has a missing dependency: 'thingId'. Either include it or remove the dependency array.",["147"],"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"'IThing' is defined but never used.","React Hook useMemo has a missing dependency: 'renderPage'. Either include it or remove the dependency array.",["150"],"React Hook useMemo has a missing dependency: 'getPageTitle'. Either include it or remove the dependency array.",["151"],"'createFamily' is defined but never used.","React Hook useMemo has a missing dependency: 'renderFamilies'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'family.family_group_id'. Either include it or remove the dependency array.",["153"],"React Hook useMemo has a missing dependency: 'renderClusters'. Either include it or remove the dependency array.",["154"],"'Typography' is defined but never used.","'classes' is assigned a value but never used.","'IFamily' is defined but never used.","'Paper' is defined but never used.","'getFamilyClusters' is defined but never used.","'ClusterBox' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","'setThings' is assigned a value but never used.",["155"],{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"168","fix":"170"},"Update the dependencies array to be: [history]",{"range":"171","text":"172"},"Update the dependencies array to be: [thingId]",{"range":"173","text":"174"},"Update the dependencies array to be: [renderPage]",{"range":"175","text":"176"},"Update the dependencies array to be: [getPageTitle]",{"range":"177","text":"178"},"Update the dependencies array to be: [renderFamilies]",{"range":"179","text":"180"},"Update the dependencies array to be: [family.family_group_id]",{"range":"181","text":"182"},"Update the dependencies array to be: [renderClusters]",{"range":"183","text":"184"},{"range":"185","text":"184"},[755,757],"[history]",[683,685],"[thingId]",[6217,6248],"[renderPage]",[6306,6337],"[getPageTitle]",[1859,1869],"[renderFamilies]",[1201,1203],"[family.family_group_id]",[1668,1678],"[renderClusters]",[1791,1799]]