[{"/Users/matthewwolfe/WebstormProjects/switch_client/src/App.tsx":"1","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignUp.tsx":"2","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignIn.tsx":"3","/Users/matthewwolfe/WebstormProjects/switch_client/src/hooks/use-auth.tsx":"4","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/PleaseConfirm.tsx":"5","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Title.tsx":"6","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/Dashboard.tsx":"7","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/MainSideList.tsx":"8","/Users/matthewwolfe/WebstormProjects/switch_client/src/utils/enums.tsx":"9","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardMain.tsx":"10","/Users/matthewwolfe/WebstormProjects/switch_client/src/styles/main.ts":"11","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardNewFamily.tsx":"12","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardFamily.tsx":"13","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/api.ts":"14","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/auth.ts":"15","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Orders.tsx":"16","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/apiRoutes.ts":"17","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/family.ts":"18","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/ClusterBox.tsx":"19","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardCluster.tsx":"20","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/routePaths.ts":"21","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardNewThing.tsx":"22","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/switch.ts":"23","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/things/Thing.tsx":"24","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/things/SwitchMain.tsx":"25","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/InPlaceLoadingSpinner.tsx":"26","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/LoadingSpinner.tsx":"27","/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/Copyright.tsx":"28","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/AcceptInvite.tsx":"29"},{"size":1095,"mtime":1614531285998,"results":"30","hashOfConfig":"31"},{"size":6257,"mtime":1613153794387,"results":"32","hashOfConfig":"31"},{"size":4376,"mtime":1613153794395,"results":"33","hashOfConfig":"31"},{"size":762,"mtime":1612745092972,"results":"34","hashOfConfig":"31"},{"size":955,"mtime":1612706391475,"results":"35","hashOfConfig":"31"},{"size":369,"mtime":1612825179280,"results":"36","hashOfConfig":"31"},{"size":8904,"mtime":1613509604116,"results":"37","hashOfConfig":"31"},{"size":4192,"mtime":1613509163839,"results":"38","hashOfConfig":"31"},{"size":463,"mtime":1613846110339,"results":"39","hashOfConfig":"31"},{"size":2538,"mtime":1614085805874,"results":"40","hashOfConfig":"31"},{"size":2771,"mtime":1613934261746,"results":"41","hashOfConfig":"31"},{"size":130,"mtime":1613153437044,"results":"42","hashOfConfig":"31"},{"size":2025,"mtime":1613322294342,"results":"43","hashOfConfig":"31"},{"size":2575,"mtime":1614533602911,"results":"44","hashOfConfig":"31"},{"size":2561,"mtime":1614534190546,"results":"45","hashOfConfig":"31"},{"size":2721,"mtime":1612742095916,"results":"46","hashOfConfig":"31"},{"size":644,"mtime":1614533382345,"results":"47","hashOfConfig":"31"},{"size":399,"mtime":1613319342589,"results":"48","hashOfConfig":"31"},{"size":779,"mtime":1613320330279,"results":"49","hashOfConfig":"31"},{"size":2198,"mtime":1614530975366,"results":"50","hashOfConfig":"31"},{"size":160,"mtime":1612705102906,"results":"51","hashOfConfig":"31"},{"size":5126,"mtime":1613834910904,"results":"52","hashOfConfig":"31"},{"size":516,"mtime":1614084986886,"results":"53","hashOfConfig":"31"},{"size":1781,"mtime":1613938740230,"results":"54","hashOfConfig":"31"},{"size":3285,"mtime":1614085520045,"results":"55","hashOfConfig":"31"},{"size":765,"mtime":1614085557503,"results":"56","hashOfConfig":"31"},{"size":971,"mtime":1612621023560,"results":"57","hashOfConfig":"31"},{"size":482,"mtime":1612358359356,"results":"58","hashOfConfig":"31"},{"size":5616,"mtime":1614533981126,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d1wjia",{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/matthewwolfe/WebstormProjects/switch_client/src/App.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignUp.tsx",["131","132"],"import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {Copyright} from \"../components/ui/Copyright\";\nimport {register, validateEmail} from \"../services/api/auth\";\nimport {mainStyles} from \"../styles/main\";\nimport {PATH_CONFIRM_EMAIL, PATH_LOGIN} from \"../services/routePaths\";\nimport {LoadingSpinner} from \"../components/ui/LoadingSpinner\";\nimport {Redirect, useHistory} from \"react-router\";\n\nexport default function SignUp() {\n    const classes = mainStyles();\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [optIn, setOptIn] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    let history = useHistory();\n\n    function handleSubmit(e: any) {\n        e.preventDefault();\n        if (!firstName) {\n            alert('Please enter your first name.');\n            return;\n        } else if (!lastName) {\n            alert('Please enter your last name.');\n            return;\n        } else if (!email || !validateEmail(email)) {\n            alert('Please enter a valid email.');\n            return;\n        } else if (!password) {\n            alert('Please enter your password.');\n            return;\n        }\n        setIsLoading(true);\n        register(firstName, lastName, email, password).then(res => {\n            setIsLoading(false);\n            if (!!res) {\n                history.push(PATH_CONFIRM_EMAIL);\n            }\n        });\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <LoadingSpinner isShowing={isLoading}/>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                onChange={(e) => setFirstName(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                onChange={(e) => setLastName(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControlLabel\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" onChange={(e) => setOptIn(e.target.checked)} />}\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href={PATH_LOGIN} variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/SignIn.tsx",[],["133","134"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/hooks/use-auth.tsx",["135"],"import {useEffect} from \"react\";\nimport {useHistory} from \"react-router\";\nimport {PATH_LOGIN} from \"../services/routePaths\";\n\nexport function useProvideAuth() {\n    let history = useHistory();\n    useEffect(() => {\n        const AUTH_URL = process.env.REACT_APP_AUTH_URL || '';\n        const url = AUTH_URL + 'ping-auth';\n        const token = localStorage.getItem('jwt') || 'Bearer';\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': token\n            }\n        }).then(resp => {\n            if (+resp.status !== 200) {\n                history.push(PATH_LOGIN)\n            }\n        }).catch(e => {\n            console.error(e);\n        });\n    }, []);\n}\n",["136","137"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/PleaseConfirm.tsx",[],["138","139"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Title.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/Dashboard.tsx",["140","141","142"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/MainSideList.tsx",["143","144"],"import React, {FC, useMemo} from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AddIcon from '@material-ui/icons/Add';\nimport GroupWork from \"@material-ui/icons/GroupWork\";\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\nimport List from \"@material-ui/core/List\";\nimport {Collapse} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {DashboardPage} from \"../../../utils/enums\";\nimport {createFamily} from \"../../../services/api/family\";\nimport {IFamily} from \"../../../utils/interfaces\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n    }),\n);\n\nexport const MainSideList: FC<{\n    handleLinkClick: (page: DashboardPage) => void,\n    handleFamilyClick: (family: IFamily) => void,\n    handleNewFamily: () => void,\n    families: Array<IFamily>\n}> = ({ handleLinkClick, handleFamilyClick, handleNewFamily, families }) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    function renderFamilies() {\n        return families.map(fam => {\n            return (\n                <ListItem button className={classes.nested} divider={true} key={fam.id} onClick={() => handleFamilyClick(fam)}>\n                    <ListItemText primary={fam.name} />\n                </ListItem>\n            );\n        });\n    }\n    const familiesList = useMemo(() => renderFamilies(), [families]);\n\n    return (\n        <List>\n            <div>\n                <ListItem button onClick={() => handleLinkClick(DashboardPage.MAIN)}>\n                    <ListItemIcon>\n                        <DashboardIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\"/>\n                </ListItem>\n                <ListItem button onClick={handleClick}>\n                    <ListItemIcon>\n                        <GroupWork/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Families\"/>\n                    {open ? <ExpandLess/> : <ExpandMore/>}\n                </ListItem>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        { familiesList }\n                        <ListItem button className={classes.nested} divider={true} onClick={handleNewFamily}>\n                            <ListItemIcon>\n                                <AddIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"New Family\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n\n                <ListItem button onClick={() => handleLinkClick(DashboardPage.NEW_THING)}>\n                    <ListItemIcon>\n                        <AddIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"New Thing\"/>\n                </ListItem>\n\n                {/*<ListItem button>*/}\n                {/*    <ListItemIcon>*/}\n                {/*        <PeopleIcon/>*/}\n                {/*    </ListItemIcon>*/}\n                {/*    <ListItemText primary=\"Customers\"/>*/}\n                {/*</ListItem>*/}\n                {/*<ListItem button>*/}\n                {/*    <ListItemIcon>*/}\n                {/*        <BarChartIcon/>*/}\n                {/*    </ListItemIcon>*/}\n                {/*    <ListItemText primary=\"Reports\"/>*/}\n                {/*</ListItem>*/}\n                {/*<ListItem button>*/}\n                {/*    <ListItemIcon>*/}\n                {/*        <LayersIcon/>*/}\n                {/*    </ListItemIcon>*/}\n                {/*    <ListItemText primary=\"Integrations\"/>*/}\n                {/*</ListItem>*/}\n            </div>\n        </List>\n    );\n};\n",["145","146"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/utils/enums.tsx",[],["147","148"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardMain.tsx",["149","150","151","152"],"import React, {FC, useEffect, useMemo} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Chart} from \"../../components/ui/dashboard/Chart\";\nimport {Deposits} from \"../../components/ui/dashboard/Deposits\";\nimport {Orders} from \"../../components/ui/dashboard/Orders\";\nimport clsx from \"clsx\";\nimport {dashboardMainStyles} from \"../../styles/main\";\nimport {IThing} from \"../../utils/interfaces\";\nimport {Thing} from \"../../components/ui/things/Thing\";\nimport {getThings} from \"../../services/api/switch\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport const DashboardMain: FC = () => {\n    const classes = dashboardMainStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeightThing);\n    const [things, setThings] = React.useState<Array<IThing>>([]);\n\n    useEffect(() => {\n        getThings().then(res => {\n            const resThings: Array<IThing> = res.things;\n            setThings(resThings);\n        }).catch(e => {\n            console.error(e);\n        });\n    }, []);\n\n    function renderThings() {\n        return things.map(thing => {\n            return (\n                <Grid item xs={12} md={4} lg={3} key={thing.id}>\n                    <Paper className={fixedHeightPaper}>\n                        <Thing thing={ thing } />\n                    </Paper>\n                </Grid>\n            );\n        });\n    }\n    const thingBoxes = useMemo(() => renderThings(), [things]);\n\n    return (\n        <div>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" display=\"block\">My Things</Typography>\n            <br />\n            <Grid container spacing={3}>\n                { thingBoxes }\n                {/*/!* Chart *!/*/}\n                {/*<Grid item xs={12} md={8} lg={9}>*/}\n                {/*    <Paper className={fixedHeightPaper}>*/}\n                {/*        <Chart />*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n                {/*/!* Recent Deposits *!/*/}\n                {/*<Grid item xs={12} md={4} lg={3}>*/}\n                {/*    <Paper className={fixedHeightPaper}>*/}\n                {/*        <Deposits />*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n                {/*/!* Recent Orders *!/*/}\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper className={classes.paper}>*/}\n                {/*        <Orders />*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n            </Grid>\n        </div>\n    );\n};\n",["153","154"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/styles/main.ts",[],["155","156"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardNewFamily.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardFamily.tsx",["157","158"],"import React, {FC, useEffect, useMemo} from \"react\";\nimport {ICluster, IFamily} from \"../../utils/interfaces\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {getFamilyClusters} from \"../../services/api/family\";\nimport {ClusterBox} from \"../../components/ui/dashboard/ClusterBox\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst customStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n        cursor: 'pointer'\n    }\n}));\n\nexport const DashboardFamily: FC<{ family: IFamily, handleClusterClick: (cluster: ICluster) => void }> = ({ family, handleClusterClick }) => {\n    const classes = customStyles();\n    const [clusters, setClusters] = React.useState<Array<ICluster>>([]);\n\n    useEffect(() => {\n        getFamilyClusters(family.family_group_id).then(res => {\n            const clusts: Array<ICluster> = res.clusters;\n            setClusters(clusts);\n        }).catch(e => {\n            console.error(e);\n        });\n    }, []);\n\n    function renderClusters() {\n        return clusters.map(cluster => {\n            return (\n                <Grid item xs={12} md={4} lg={3} key={cluster.id}>\n                    <Paper className={classes.paper} onClick={() => handleClusterClick(cluster)}>\n                        <ClusterBox cluster={ cluster } />\n                    </Paper>\n                </Grid>\n            );\n        });\n    }\n    const clusterBoxes = useMemo(() => renderClusters(), [clusters]);\n\n    return (\n        <div>\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" display=\"block\">Clusters</Typography>\n            <br/>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    {clusterBoxes}\n                </Grid>\n            </div>\n        </div>\n\n    );\n};\n","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/api.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/auth.ts",["159","160"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/Orders.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/apiRoutes.ts",["161"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/family.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/dashboard/ClusterBox.tsx",["162","163"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardCluster.tsx",["164","165"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/services/routePaths.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/dashboard/DashboardNewThing.tsx",["166","167","168"],"import React, {FC, useEffect, useMemo, useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ICluster} from \"../../utils/interfaces\";\nimport {getClusters} from \"../../services/api/cluster\";\nimport {LoadingSpinner} from \"../../components/ui/LoadingSpinner\";\nimport {activateThing} from \"../../services/api/switch\";\nimport {useHistory} from \"react-router\";\nimport {PATH_HOME} from \"../../services/routePaths\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 140,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport const DashboardNewThing: FC = () => {\n    const classes = useStyles();\n    const [thingName, setThingName] = useState('');\n    const [thingKey, setThingKey] = useState('');\n    const [clusterGroupId, setClusterGroupId] = useState('');\n    const [clusters, setClusters] = useState<Array<ICluster>>([]);\n    const [isLoading, setIsLoading] = useState(false);\n    let history = useHistory();\n\n    useEffect(() => {\n        getClusters().then(res => {\n            const clusts: Array<ICluster> = res.clusters;\n            setClusters(clusts);\n        }).catch(e => {\n            console.error(e);\n        });\n    }, []);\n\n    const manuallySetClusterId = (e: any) => {\n        const groupId = e.target.value;\n        setClusterGroupId(groupId);\n    }\n\n    const addClick = (e: any) => {\n        e.preventDefault();\n        if (!thingName) {\n            alert('Please enter the thing\\'s id/name.');\n            return;\n        } else if (!thingKey) {\n            alert('Please enter the thing\\'s key.');\n            return;\n        } else if (clusterGroupId === '') {\n            alert('Please select a cluster to add the thing to.');\n            return;\n        }\n\n        const payload = {\n            name: thingName,\n            key: thingKey,\n            cluster_group_id: clusterGroupId\n        }\n        setIsLoading(true);\n        activateThing(payload).then(res => {\n            setIsLoading(false);\n            if (!!res) {\n                setThingName('');\n                setThingKey('');\n                setClusterGroupId('');\n            }\n        }).catch(e => {\n            console.error(e);\n            setIsLoading(false);\n        });\n    };\n\n    function renderClusterItems() {\n        return clusters.map((cluster: ICluster) => {\n            return <MenuItem key={cluster.cluster_group_id} value={cluster.cluster_group_id}>{cluster.name}</MenuItem>\n        });\n    }\n    const clusterItems = useMemo(() => renderClusterItems(), [clusters]);\n\n    return (\n        <React.Fragment>\n            <LoadingSpinner isShowing={isLoading}/>\n            <Typography variant=\"h6\" gutterBottom>\n                Shipping address\n            </Typography>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        required\n                        id=\"thingName\"\n                        label=\"Thing Name\"\n                        fullWidth\n                        autoComplete=\"thing-name\"\n                        onChange={(e) => setThingName(e.target.value)}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        required\n                        id=\"thingKey\"\n                        label=\"Secret Key\"\n                        type=\"password\"\n                        fullWidth\n                        autoComplete=\"thingKey\"\n                        onChange={(e) => setThingKey(e.target.value)}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"age-native-simple\">Cluster</InputLabel>\n                        <Select\n                            value={clusterGroupId}\n                            onChange={manuallySetClusterId}\n                            // onChange={(e) => setClusterId(e.target.value)}\n                        >\n                            { clusterItems }\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6} />\n                <Grid item xs={9} sm={4}>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={addClick}\n                    >\n                        Add Thing\n                    </Button>\n                </Grid>\n\n            </Grid>\n        </React.Fragment>\n    );\n};\n","/Users/matthewwolfe/WebstormProjects/switch_client/src/services/api/switch.ts",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/things/Thing.tsx",["169","170","171","172","173","174","175","176","177","178"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/things/SwitchMain.tsx",["179","180","181","182"],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/InPlaceLoadingSpinner.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/LoadingSpinner.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/components/ui/Copyright.tsx",[],"/Users/matthewwolfe/WebstormProjects/switch_client/src/pages/AcceptInvite.tsx",["183","184"],{"ruleId":"185","severity":1,"message":"186","line":19,"column":9,"nodeType":"187","messageId":"188","endLine":19,"endColumn":17},{"ruleId":"185","severity":1,"message":"189","line":27,"column":12,"nodeType":"187","messageId":"188","endLine":27,"endColumn":17},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":24,"column":8,"nodeType":"196","endLine":24,"endColumn":10,"suggestions":"197"},{"ruleId":"190","replacedBy":"198"},{"ruleId":"192","replacedBy":"199"},{"ruleId":"190","replacedBy":"200"},{"ruleId":"192","replacedBy":"201"},{"ruleId":"185","severity":1,"message":"202","line":25,"column":28,"nodeType":"187","messageId":"188","endLine":25,"endColumn":34},{"ruleId":"194","severity":1,"message":"203","line":184,"column":49,"nodeType":"196","endLine":184,"endColumn":80,"suggestions":"204"},{"ruleId":"194","severity":1,"message":"205","line":185,"column":56,"nodeType":"196","endLine":185,"endColumn":87,"suggestions":"206"},{"ruleId":"185","severity":1,"message":"207","line":13,"column":9,"nodeType":"187","messageId":"188","endLine":13,"endColumn":21},{"ruleId":"194","severity":1,"message":"208","line":51,"column":58,"nodeType":"196","endLine":51,"endColumn":68,"suggestions":"209"},{"ruleId":"190","replacedBy":"210"},{"ruleId":"192","replacedBy":"211"},{"ruleId":"190","replacedBy":"212"},{"ruleId":"192","replacedBy":"213"},{"ruleId":"185","severity":1,"message":"214","line":4,"column":9,"nodeType":"187","messageId":"188","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"215","line":5,"column":9,"nodeType":"187","messageId":"188","endLine":5,"endColumn":17},{"ruleId":"185","severity":1,"message":"216","line":6,"column":9,"nodeType":"187","messageId":"188","endLine":6,"endColumn":15},{"ruleId":"194","severity":1,"message":"217","line":39,"column":54,"nodeType":"196","endLine":39,"endColumn":62,"suggestions":"218"},{"ruleId":"190","replacedBy":"219"},{"ruleId":"192","replacedBy":"220"},{"ruleId":"190","replacedBy":"221"},{"ruleId":"192","replacedBy":"222"},{"ruleId":"194","severity":1,"message":"223","line":34,"column":8,"nodeType":"196","endLine":34,"endColumn":10,"suggestions":"224"},{"ruleId":"194","severity":1,"message":"225","line":47,"column":58,"nodeType":"196","endLine":47,"endColumn":68,"suggestions":"226"},{"ruleId":"185","severity":1,"message":"227","line":3,"column":9,"nodeType":"187","messageId":"188","endLine":3,"endColumn":15},{"ruleId":"185","severity":1,"message":"228","line":4,"column":9,"nodeType":"187","messageId":"188","endLine":4,"endColumn":31},{"ruleId":null,"fatal":true,"severity":2,"message":"229","line":8,"column":0},{"ruleId":"185","severity":1,"message":"230","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":18},{"ruleId":"185","severity":1,"message":"231","line":18,"column":11,"nodeType":"187","messageId":"188","endLine":18,"endColumn":18},{"ruleId":"194","severity":1,"message":"232","line":47,"column":8,"nodeType":"196","endLine":47,"endColumn":10,"suggestions":"233"},{"ruleId":"194","severity":1,"message":"217","line":60,"column":54,"nodeType":"196","endLine":60,"endColumn":62,"suggestions":"234"},{"ruleId":"185","severity":1,"message":"235","line":16,"column":9,"nodeType":"187","messageId":"188","endLine":16,"endColumn":18},{"ruleId":"185","severity":1,"message":"236","line":35,"column":9,"nodeType":"187","messageId":"188","endLine":35,"endColumn":16},{"ruleId":"194","severity":1,"message":"237","line":88,"column":62,"nodeType":"196","endLine":88,"endColumn":72,"suggestions":"238"},{"ruleId":"185","severity":1,"message":"239","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":12},{"ruleId":"185","severity":1,"message":"240","line":5,"column":9,"nodeType":"187","messageId":"188","endLine":5,"endColumn":14},{"ruleId":"185","severity":1,"message":"241","line":7,"column":9,"nodeType":"187","messageId":"188","endLine":7,"endColumn":22},{"ruleId":"185","severity":1,"message":"242","line":8,"column":9,"nodeType":"187","messageId":"188","endLine":8,"endColumn":22},{"ruleId":"185","severity":1,"message":"243","line":9,"column":9,"nodeType":"187","messageId":"188","endLine":9,"endColumn":27},{"ruleId":"185","severity":1,"message":"244","line":10,"column":9,"nodeType":"187","messageId":"188","endLine":10,"endColumn":24},{"ruleId":"185","severity":1,"message":"245","line":11,"column":9,"nodeType":"187","messageId":"188","endLine":11,"endColumn":25},{"ruleId":"185","severity":1,"message":"246","line":12,"column":9,"nodeType":"187","messageId":"188","endLine":12,"endColumn":26},{"ruleId":"185","severity":1,"message":"247","line":15,"column":10,"nodeType":"187","messageId":"188","endLine":15,"endColumn":24},{"ruleId":"194","severity":1,"message":"248","line":41,"column":51,"nodeType":"196","endLine":41,"endColumn":58,"suggestions":"249"},{"ruleId":"194","severity":1,"message":"250","line":65,"column":8,"nodeType":"196","endLine":65,"endColumn":10,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":83,"column":24,"nodeType":"254","endLine":83,"endColumn":96},{"ruleId":"252","severity":1,"message":"253","line":85,"column":24,"nodeType":"254","endLine":85,"endColumn":94},{"ruleId":"194","severity":1,"message":"255","line":90,"column":60,"nodeType":"196","endLine":90,"endColumn":75,"suggestions":"256"},{"ruleId":"185","severity":1,"message":"189","line":27,"column":12,"nodeType":"187","messageId":"188","endLine":27,"endColumn":17},{"ruleId":"194","severity":1,"message":"257","line":40,"column":8,"nodeType":"196","endLine":40,"endColumn":10,"suggestions":"258"},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'optIn' is assigned a value but never used.","no-native-reassign",["259"],"no-negated-in-lhs",["260"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["261"],["259"],["260"],["259"],["260"],"'IThing' is defined but never used.","React Hook useMemo has a missing dependency: 'renderPage'. Either include it or remove the dependency array.",["262"],"React Hook useMemo has a missing dependency: 'getPageTitle'. Either include it or remove the dependency array.",["263"],"'createFamily' is defined but never used.","React Hook useMemo has a missing dependency: 'renderFamilies'. Either include it or remove the dependency array.",["264"],["259"],["260"],["259"],["260"],"'Chart' is defined but never used.","'Deposits' is defined but never used.","'Orders' is defined but never used.","React Hook useMemo has a missing dependency: 'renderThings'. Either include it or remove the dependency array.",["265"],["259"],["260"],["259"],["260"],"React Hook useEffect has a missing dependency: 'family.family_group_id'. Either include it or remove the dependency array.",["266"],"React Hook useMemo has a missing dependency: 'renderClusters'. Either include it or remove the dependency array.",["267"],"'putReq' is defined but never used.","'PATH_INVITATION_ACCEPT' is defined but never used.","Parsing error: Expression expected.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cluster.cluster_group_id'. Either include it or remove the dependency array.",["268"],["269"],"'PATH_HOME' is defined but never used.","'history' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'renderClusterItems'. Either include it or remove the dependency array.",["270"],"'Link' is defined but never used.","'Title' is defined but never used.","'DashboardPage' is defined but never used.","'DashboardMain' is defined but never used.","'DashboardNewFamily' is defined but never used.","'DashboardFamily' is defined but never used.","'DashboardCluster' is defined but never used.","'DashboardNewThing' is defined but never used.","'preventDefault' is defined but never used.","React Hook useMemo has a missing dependency: 'renderThing'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has a missing dependency: 'thing.aws_name'. Either include it or remove the dependency array.",["272"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useMemo has a missing dependency: 'renderSwitchState'. Either include it or remove the dependency array.",["273"],"React Hook useEffect has missing dependencies: 'history' and 'location.search'. Either include them or remove the dependency array.",["274"],"no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"283","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [history]",{"range":"302","text":"303"},"Update the dependencies array to be: [renderPage]",{"range":"304","text":"305"},"Update the dependencies array to be: [getPageTitle]",{"range":"306","text":"307"},"Update the dependencies array to be: [renderFamilies]",{"range":"308","text":"309"},"Update the dependencies array to be: [renderThings]",{"range":"310","text":"311"},"Update the dependencies array to be: [family.family_group_id]",{"range":"312","text":"313"},"Update the dependencies array to be: [renderClusters]",{"range":"314","text":"315"},"Update the dependencies array to be: [cluster.cluster_group_id]",{"range":"316","text":"317"},{"range":"318","text":"311"},"Update the dependencies array to be: [renderClusterItems]",{"range":"319","text":"320"},"Update the dependencies array to be: [renderThing]",{"range":"321","text":"322"},"Update the dependencies array to be: [thing.aws_name]",{"range":"323","text":"324"},"Update the dependencies array to be: [renderSwitchState]",{"range":"325","text":"326"},"Update the dependencies array to be: [history, location.search]",{"range":"327","text":"328"},[755,757],"[history]",[6454,6485],"[renderPage]",[6543,6574],"[getPageTitle]",[1859,1869],"[renderFamilies]",[1471,1479],"[renderThings]",[1201,1203],"[family.family_group_id]",[1668,1678],"[renderClusters]",[1442,1444],"[cluster.cluster_group_id]",[1847,1855],[2993,3003],"[renderClusterItems]",[1373,1380],"[renderThing]",[1935,1937],"[thing.aws_name]",[2825,2840],"[renderSwitchState]",[1744,1746],"[history, location.search]"]